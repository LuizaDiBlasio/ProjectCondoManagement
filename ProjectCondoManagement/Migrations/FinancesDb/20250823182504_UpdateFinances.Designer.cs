// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectCondoManagement.Data.Entites.FinancesDb;

#nullable disable

namespace ProjectCondoManagement.Migrations.FinancesDb
{
    [DbContext(typeof(DataContextFinances))]
    [Migration("20250823182504_UpdateFinances")]
    partial class UpdateFinances
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CondominiumId")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseType")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.FinancialAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssociatedBankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InitialDeposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FinancialAccounts");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CondominiumId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAccountId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BeneficiaryAccountId")
                        .HasColumnType("int");

                    b.Property<int>("CondominiumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayerAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryAccountId");

                    b.HasIndex("PayerAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Expense", b =>
                {
                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.Payment", null)
                        .WithMany("Expenses")
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Invoice", b =>
                {
                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.FinancialAccount", "FinancialAccount")
                        .WithMany()
                        .HasForeignKey("FinancialAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.Payment", "Payment")
                        .WithOne("Invoice")
                        .HasForeignKey("ProjectCondoManagement.Data.Entites.FinancesDb.Invoice", "Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinancialAccount");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Transaction", b =>
                {
                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.FinancialAccount", "AccountBeneficiary")
                        .WithMany("TransactionsAsBeneficiary")
                        .HasForeignKey("BeneficiaryAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.Payment", "Payment")
                        .WithOne("Transaction")
                        .HasForeignKey("ProjectCondoManagement.Data.Entites.FinancesDb.Transaction", "Id");

                    b.HasOne("ProjectCondoManagement.Data.Entites.FinancesDb.FinancialAccount", "AccountPayer")
                        .WithMany("TransactionsAsPayer")
                        .HasForeignKey("PayerAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountBeneficiary");

                    b.Navigation("AccountPayer");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.FinancialAccount", b =>
                {
                    b.Navigation("TransactionsAsBeneficiary");

                    b.Navigation("TransactionsAsPayer");
                });

            modelBuilder.Entity("ProjectCondoManagement.Data.Entites.FinancesDb.Payment", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Invoice");

                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
