@model ClassLibrary.DtoModels.MessageDto

@{
    ViewData["Title"] = "MessageDetails";
}

<div class="content-body">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-xl-8 col-xxl-8">
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center w-100">
                            <h4 class="card-title welcome-text mb-0">Edit Message</h4>
                        </div>
                    </div>

                    <div class="card-body">
                        <form asp-action="EditMessageStatus" asp-controller="Message" method="post">

                            <input type="hidden" asp-for="Id" />

                            <div class="form-group mb-3">
                                <label asp-for="PostingDate" class="form-label font-weight-bold"></label>
                                @if (Model.PostingDate.HasValue)
                                {
                                    <span>@Model.PostingDate.Value.ToString("MM/dd/yyyy HH:mm")</span>
                                }
                                else
                                {
                                    <span>Error retrieving date</span>
                                }
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="MessageTitle" class="form-label font-weight-bold"></label>
                                @Html.DisplayFor(model => model.MessageTitle)
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="MessageContent" class="form-label font-weight-bold"></label>
                                @Html.DisplayFor(model => model.MessageContent)
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="SenderEmail" class="form-label font-weight-bold"></label>
                                @Html.DisplayFor(model => model.SenderEmail)
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="ReceiverEmail" class="form-label font-weight-bold"></label>
                                @Html.DisplayFor(model => model.ReceiverEmail)
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Status" class="form-label font-weight-bold text-purple"></label>
                                <select asp-for="Status.Value" asp-items="Model.StatusList" class="form-control custom-select bg-purple text-white"></select>
                            </div>

                            <div class="d-flex justify-content-between mt-4">
                                <a asp-controller="Message" asp-action="IndexReceived" class="btn btn-secondary">Inbox</a>
                                <a asp-controller="Message" asp-action="IndexSent" class="btn btn-secondary">Sent Messages</a>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </div>
                        </form>

                        <flash dismissable="true" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <style>
        .text-purple {
            color: #8A2BE2 !important;
        }

        .bg-purple {
            background-color: #8A2BE2 !important;
        }

            .bg-purple option {
                background-color: white !important;
                color: black !important;
            }
    </style>
}
