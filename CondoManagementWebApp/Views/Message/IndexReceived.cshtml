@model IEnumerable<ClassLibrary.DtoModels.MessageDto>

@{
    ViewData["Title"] = "Inbox";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-body">
    <div class="container-fluid">
        @* Título e Botões *@
        <div class="row page-titles mx-0">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h4>Messages Inbox</h4>
                </div>
            </div>
            <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
                <a asp-controller="Message" asp-action="CreateMessage" class="btn btn-primary me-2">New Message</a>
                <a asp-controller="Message" asp-action="IndexSent" class="btn btn-secondary">Sent Messages</a>
            </div>
        </div>

        @* Conteúdo da Tabela dentro de um Card *@
        <div class="row">
            <div class="col-xl-12 col-xxl-12">
                <div class="card">
                    <div class="card-body">
                        @if (Model != null && Model.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Date</th>
                                            <th>Sent from</th>
                                            <th>Ticket Status</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr class="message-row" data-message-id="@item.Id" style="cursor: pointer;">
                                                <td>@Html.DisplayFor(modelItem => item.MessageTitle)</td>
                                                <td>@item.PostingDate?.ToString("MM/dd/yyyy HH:mm")</td>
                                                <td>@Html.DisplayFor(modelItem => item.SenderEmail)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Status.Name)</td>
                                                <td>
                                                    @if (!this.User.IsInRole("CondoMember"))
                                                    {
                                                        <a asp-controller="Message" asp-action="MessageDetails" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-2">Resolve Ticket</a>
                                                    }
                                                    <a asp-controller="Message" asp-action="Reply" asp-route-id="@item.Id" class="btn btn-secondary btn-sm me-2">Reply</a>
                                                    <a href="#" class="btn btn-danger btn-sm delete-btn" data-bs-toggle="modal" data-bs-target="#deleteDialog" data-id="@item.Id">Delete</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p>No received messages.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="deleteDialog" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this message?</p>
                <div id="delete-error-message" class="text-danger"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnNoDelete">Cancel</button>
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // Adiciona o ID da mensagem para a modal de deleção
            var idToDelete = 0;
            $('a.delete-btn').click(function (e) {
                e.stopPropagation(); // Impede o evento de clique da linha de ser disparado
                idToDelete = $(this).data('id');
                // Limpa a mensagem de erro ao abrir a modal
                $('#delete-error-message').text('').hide();
            });

            // Envia a requisição AJAX para deleção quando o botão "Delete" da modal é clicado
            $("#btnYesDelete").click(function () {
                console.log('ID to delete:', idToDelete);
                $.ajax({
                    url: '/Message/DeleteReceivedMessages/' + idToDelete,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            $("#deleteDialog").modal('hide');
                            window.location.reload(); // Recarrega a página após a exclusão bem-sucedida
                        } else {
                            // Exibe a mensagem de erro se a exclusão falhar
                            $('#delete-error-message').text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        $("#deleteDialog").modal('hide');
                        console.error('AJAX Error:', status, error, xhr.responseText);
                        // Idealmente, você usaria uma modal de erro em vez de um alert
                        alert('An unexpected error occurred. Please try again later.');
                    }
                });
            });
        });
    </script>
}