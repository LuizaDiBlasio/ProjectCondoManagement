@* @model IEnumerable<ClassLibrary.DtoModels.MessageDto>

@{
    ViewData["Title"] = "IndexSent";
}

<h1>Sent Messages</h1> *@

@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostingDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MessageTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MessageContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SenderEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReceiverEmail)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostingDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MessageTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MessageContent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SenderEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReceiverEmail)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table> *@

@* <table class="table">
    <thead>
        @if ((Model != null && !Model.Any()) || Model == null)
        {
            <tr>
                <th>
                    No messages
                </th>
            </tr>
        }
        else
        {
            <tr>        
                <th>
                    @Html.DisplayNameFor(model => model.PostingDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MessageTitle)
                </th>
                <th>
                    Sent to
                </th>
                <th></th>
            </tr>
        }
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                @if (item.SenderEmail == this.User.Identity.Name)
                {
                    <tr class="message-row" data-message-id="@item.Id" style="cursor: pointer;">

                        <td>
                            @item.PostingDate?.ToString("MM/dd/yyyy HH:mm")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MessageTitle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceiverEmail)
                        </td>
                        <td>
                            <a href="#" class="btn btn-danger " data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#deleteDialog">Delete</a>
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>

<div id="deleteDialog" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this message?</p>
                <div id="delete-error-message" class="text-danger"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnNoDelete">Cancel</button>
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>


<div class="d-flex justify-content-between mt-3">
    <a asp-controller="Message" asp-action="IndexReceived"  class="btn btn-secondary">Inbox</a>
</div> *@
@* 
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".message-row").click(function () {
                var messageId = $(this).data("message-id");
                window.location.href = "/Message/MessageDetails/" + messageId;
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            var idToDelete = 0;

            // Use o seletor para o link que abre o modal de deleção
            $('a[data-bs-target="#deleteDialog"]').click(function () {
                idToDelete = $(this).data('id');
                // Limpe a mensagem de erro anterior quando o modal é reaberto
                $('#delete-error-message').text('').hide();
            });

            $("#btnYesDelete").click(function () {
                console.log('ID to delete:', idToDelete);
                console.log('URL :', '/Message/DeleteSentMessages/' + idToDelete);

                $.ajax({
                    url: '/Message/DeleteSentMessages/' + idToDelete,
                    type: 'POST',
                    success: function (response) {
                        // Verifique se a operação foi um sucesso
                        if (response.success) {
                            $("#deleteDialog").modal('hide'); // Fecha a modal APENAS no sucesso
                            window.location.reload();
                        } else {
                            // Se for um erro, exibe a mensagem, mas NÃO fecha a modal
                            $('#delete-error-message').text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        // Tratar erros de servidor (por exemplo, 500 Internal Server Error)
                        $("#deleteDialog").modal('hide');
                        console.error('AJAX Error:', status, error, xhr.responseText);
                        alert('Unexpected error, try again later.');
                    }
                });
            });

            $("#btnNoDelete").click(function () {
                $("#deleteDialog").modal('hide');
            });
        });
    </script>
}

{
    ViewData["Title"] = "Sent Messages";
}

<style>
    .message-row:hover {
        background-color: #e0e6f0;
        transition: background-color 0.3s ease-in-out;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Sent Messages</h1>
    <div>
        <a asp-controller="Message" asp-action="CreateMessage" class="btn btn-primary">New</a>
        <a asp-controller="Message" asp-action="IndexReceived" class="btn btn-secondary">Inbox</a>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Id)</th>
                <th>@Html.DisplayNameFor(model => model.PostingDate)</th>
                <th>@Html.DisplayNameFor(model => model.MessageTitle)</th>
                <th>@Html.DisplayNameFor(model => model.ReceiverEmail)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="message-row" data-message-id="@item.Id" style="cursor: pointer;">
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@item.PostingDate?.ToString("MM/dd/yyyy HH:mm")</td>
                    <td>@Html.DisplayFor(modelItem => item.MessageTitle)</td>
                    <td>@Html.DisplayFor(modelItem => item.ReceiverEmail)</td>
                    <td>
                        <a href="#" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteDialog" data-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No sent messages</p>
}

<!-- Delete Modal -->
<div id="deleteDialog" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this message?</p>
                <div id="delete-error-message" class="text-danger"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnNoDelete">Cancel</button>
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // Clica na linha para ir para os detalhes da mensagem
            $(".message-row").click(function (e) {
                // Previne o evento de clique do link de delete de propagar para a linha
                if ($(e.target).is('a, button')) {
                    return;
                }
                var messageId = $(this).data("message-id");
                window.location.href = "/Message/MessageDetails/" + messageId;
            });

            // Adiciona o ID da mensagem para a modal de deleção
            var idToDelete = 0;
            $('a[data-bs-toggle="modal"]').click(function (e) {
                e.stopPropagation(); // Previne o evento de clique na linha
                idToDelete = $(this).data('id');
                $('#delete-error-message').text('').hide();
            });

            // Envia a requisição AJAX para deleção
            $("#btnYesDelete").click(function () {
                console.log('ID to delete:', idToDelete);
                $.ajax({
                    url: '/Message/DeleteSentMessages/' + idToDelete,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            $("#deleteDialog").modal('hide');
                            window.location.reload();
                        } else {
                            $('#delete-error-message').text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        $("#deleteDialog").modal('hide');
                        console.error('AJAX Error:', status, error, xhr.responseText);
                        alert('An unexpected error occurred. Please try again later.');
                    }
                });
            });
        });
    </script>
}
*@

@model IEnumerable<ClassLibrary.DtoModels.MessageDto>

@{
    ViewData["Title"] = "Sent Messages";
}

<style>
    /* CSS para o efeito de hover na linha da tabela */
    .message-row:hover {
        background-color: /* #e0e6f0 */ blue !important;
        transition: background-color 0.3s ease-in-out;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Sent Messages</h1>
    <div>
        <a asp-controller="Message" asp-action="CreateMessage" class="btn btn-primary">New</a>
        <a asp-controller="Message" asp-action="IndexReceived" class="btn btn-secondary">Inbox</a>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Date</th>        
                <th>Sent to</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="message-row" data-message-id="@item.Id" style="cursor: pointer;">
                    <td>@Html.DisplayFor(modelItem => item.MessageTitle)</td>
                    <td>@item.PostingDate?.ToString("MM/dd/yyyy HH:mm")</td>
                    <td>@Html.DisplayFor(modelItem => item.ReceiverEmail)</td>
                    <td>
                        <a href="#" class="btn btn-danger btn-sm delete-btn" data-bs-toggle="modal" data-bs-target="#deleteDialog" data-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No sent messages</p>
}

<!-- Delete Modal -->
<div id="deleteDialog" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this message?</p>
                <div id="delete-error-message" class="text-danger"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnNoDelete">Cancel</button>
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            //Clica na linha para ir para os detalhes da mensagem.
            //A verificação abaixo garante que o evento de clique do link de deleção não afete o hover.
            $(".message-row").click(function (e) {
                if (!$(e.target).hasClass('delete-btn')) {
                    var messageId = $(this).data("message-id");
                    window.location.href = "/Message/MessageDetails/" + messageId;
                }
            });


            // Adiciona o ID da mensagem para a modal de deleção e impede que o evento de clique na linha seja acionado.
            var idToDelete = 0;
            $('a.delete-btn').click(function (e) {
                e.stopPropagation(); // Previne o evento de clique na linha
                idToDelete = $(this).data('id');
                $('#delete-error-message').text('').hide();
            });

            // Envia a requisição AJAX para deleção
            $("#btnYesDelete").click(function () {
                console.log('ID to delete:', idToDelete);
                $.ajax({
                    url: '/Message/DeleteSentMessages/' + idToDelete,
                    type: 'POST',
                    success: function (response) {
                        // A resposta agora vem do controller como JSON, então 'response.success' funcionará
                        if (response.success) {
                            // Esconde a modal, não mais "retorna para a modal"
                            $("#deleteDialog").modal('hide');
                            // Recarrega a página para refletir a mensagem deletada
                            window.location.reload();
                        } else {
                            $('#delete-error-message').text(response.message).show();
                        }
                    },
                    error: function (xhr, status, error) {
                        $("#deleteDialog").modal('hide');
                        console.error('AJAX Error:', status, error, xhr.responseText);
                        alert('An unexpected error occurred. Please try again later.');
                    }
                });
            });
        });
    </script>
}
