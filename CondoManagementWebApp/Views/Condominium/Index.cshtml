@model IEnumerable<ClassLibrary.DtoModels.CondominiumDto>

@{
	ViewData["Title"] = "Condominiums";
}

<div class="d-flex justify-content-between align-items-center mb-3">
	<h1>Condominiums</h1>
	@if (this.User.IsInRole("CompanyAdmin"))
	{
		<a class="btn btn-success" asp-action="Create">Create New Condominium</a>
	}
</div>

@if (Model != null && Model.Any())
{
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.CondoName)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Address)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ManagerUserId)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.CondoName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Address)
					</td>
					<td>
						@if (item.ManagerUserId == null)
						{
							<a class="text-danger">No Manager Assigned</a>
						}
						else
						{
							@Html.DisplayFor(modelItem => item.ManagerUser.FullName)
						}
					</td>
					<td>
						<a class="btn btn-outline-info" asp-controller="Units" asp-action="Index" asp-route-id="@item.Id" asp-route-condoName="@item.CondoName">Units</a>

						@if (this.User.IsInRole("CompanyAdmin"))
						{
							<a class="btn btn-outline-secondary" asp-action="AssignManager" asp-route-id="@item.Id">Assign Manager</a>
							<a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
							<a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
						}

						<a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>

					</td>
				</tr>
			}
		</tbody>
	</table>
}
else
{
	<div class="alert alert-info" role="alert">
		No condominiums found.
	</div>
}