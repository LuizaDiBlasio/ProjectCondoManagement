@model CondoManagementWebApp.Models.EditMeetingViewModel

@{
    ViewData["Title"] = "Edit Meeting";
}

<div class="fix-wrapper">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-md-12">
                <div class="card mb-0 h-auto">
                    <div class="card-body">
                        <h4 class="text-center mb-4">Edit Meeting</h4>
                        <hr class="mt-4 mb-5" style="border-top: 1px solid #e0e0e0; opacity: 0.8;" />

                        <div asp-validation-summary="ModelOnly" class="text-danger text-center"></div>

                        <form asp-action="RequestEditMeeting">
                            <input type="hidden" asp-for="Id" />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-4">
                                        <label asp-for="Title" class="form-label"></label>
                                        <input asp-for="Title" class="form-control" />
                                        <span asp-validation-for="Title" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-4">
                                        <label asp-for="Description" class="form-label"></label>
                                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                                        <span asp-validation-for="Description" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-4">
                                        <label asp-for="DateAndTime" class="form-label"></label>
                                        <input asp-for="DateAndTime" class="form-control" id="dateAndTimePicker" />
                                        <span asp-validation-for="DateAndTime" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-4">
                                        <label asp-for="CondominiumId" class="form-label">Condominium</label>
                                        <select asp-for="CondominiumId" asp-items="Model.CondosToSelect" class="form-control" id="condominiumSelect">
                                            <option value="">-- Select Condominium --</option>
                                        </select>
                                        <span asp-validation-for="CondominiumId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-4">
                                        <label asp-for="SelectedOccurrencesIds" class="form-label">Matters that will be discussed</label>
                                        <div class="border p-3 rounded" style="max-height: 250px; overflow-y: auto;" id="occurrencesListContainer">
                                            <p>Please select a condominium to load its occurrences.</p>
                                        </div>
                                        <span asp-validation-for="SelectedOccurrencesIds" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-4">
                                        <label asp-for="SelectedCondoMembersIds" class="form-label">Invite members</label>
                                        <div class="border p-3 rounded" style="max-height: 250px; overflow-y: auto;" id="condoMembersListContainer">
                                            <p>Please select a condominium to load its members.</p>
                                        </div>
                                        <span asp-validation-for="SelectedCondoMembersIds" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-4">
                                        <label class="form-label">Meeting Type</label>
                                        <div class="form-check form-switch d-flex align-items-center">
                                            <input class="form-check-input me-2" type="checkbox" id="isExtraMeetingSwitch" asp-for="MeetingType">
                                            <label class="form-check-label" for="isExtraMeetingSwitch" id="isExtraMeetingLabel">
                                                <span class="text-danger">Regular</span>
                                            </label>
                                        </div>
                                        <span asp-validation-for="MeetingType" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mt-3 d-flex justify-content-between align-items-center">
                                <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Include Syncfusion DateTimePicker library -->
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>
    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            // Inicializa o Syncfusion DateTimePicker
            var initialDateTime = '@(Model.DateAndTime.HasValue ? Model.DateAndTime.Value.ToString("yyyy-MM-ddTHH:mm:ss") : "")';
            var dateTimePicker = new ej.calendars.DateTimePicker({
                format: 'MM/dd/yyyy HH:mm',
                placeholder: 'Select a date and time',
                min: new Date(),
                value: initialDateTime ? new Date(initialDateTime) : null
            });
            dateTimePicker.appendTo('#dateAndTimePicker');

            // Script para o switch do tipo de reunião
            const isExtraMeetingSwitch = document.getElementById('isExtraMeetingSwitch');
            const isExtraMeetingLabel = document.getElementById('isExtraMeetingLabel');

            function updateLabel() {
                if (isExtraMeetingSwitch.checked) {
                    isExtraMeetingLabel.innerHTML = '<span class="text-success">Extra</span>';
                } else {
                    isExtraMeetingLabel.innerHTML = '<span class="text-danger">Regular</span>';
                }
            }
            updateLabel(); // Define o estado inicial do rótulo
            isExtraMeetingSwitch.addEventListener('change', updateLabel);

            // Função para carregar ocorrências
            function loadOccurrences(condoId, selectedIds) {
                var occurrencesContainer = $('#occurrencesListContainer');
                occurrencesContainer.empty();

                if (condoId) {
                    $.ajax({
                        url: `/GetOccurencesFromCondo/${condoId}`,
                        type: 'GET',
                        dataType: 'json',
                        success: function (occurrences) {
                            if (occurrences.length > 0) {
                                $.each(occurrences, function (i, occurrence) {
                                    var isChecked = selectedIds.includes(occurrence.value) ? 'checked' : '';
                                    var checkboxHtml = `
                                        <div class="form-check">
                                            <input type="checkbox"
                                                name="SelectedOccurrencesIds"
                                                value="${occurrence.value}"
                                                id="occurrence_${occurrence.value}"
                                                class="form-check-input"
                                                ${isChecked} />
                                            <label class="form-check-label" for="occurrence_${occurrence.value}">
                                                ${occurrence.text}
                                            </label>
                                        </div>`;
                                    occurrencesContainer.append(checkboxHtml);
                                });
                            } else {
                                occurrencesContainer.append('<p>No occurrences for this condominium.</p>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching occurrences: " + error);
                            occurrencesContainer.append('<p>Error loading occurrences. Please try again.</p>');
                        }
                    });
                }
            }

            // Função para carregar membros do condomínio
            function loadCondoMembers(condoId, selectedIds) {
                var membersContainer = $('#condoMembersListContainer');
                membersContainer.empty();

                if (condoId) {
                    $.ajax({
                        url: `/GetCondoMembersFromCondo/${condoId}`,
                        type: 'GET',
                        dataType: 'json',
                        success: function (condoMembers) {
                            if (condoMembers.length > 0) {
                                $.each(condoMembers, function (i, member) {
                                    var isChecked = selectedIds.includes(member.value) ? 'checked' : '';
                                    var checkboxHtml = `
                                        <div class="form-check">
                                            <input type="checkbox"
                                                name="SelectedCondoMembersIds"
                                                value="${member.value}"
                                                id="condomember_${member.value}"
                                                class="form-check-input"
                                                ${isChecked} />
                                            <label class="form-check-label" for="condomember_${member.value}">
                                                ${member.text}
                                            </label>
                                        </div>`;
                                    membersContainer.append(checkboxHtml);
                                });
                            } else {
                                membersContainer.append('<p>Condominium has no members yet.</p>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching condo members: " + error);
                            membersContainer.append('<p>Error loading members. Please try again.</p>');
                        }
                    });
                }
            }

            // Lógica inicial para pré-selecionar os valores do modelo
            var initialCondoId = $('#condominiumSelect').val();
            var initialSelectedOccurrences = @(Html.Raw(Json.Serialize(Model.SelectedOccurrencesIds)));
            var initialSelectedMembers = @(Html.Raw(Json.Serialize(Model.SelectedCondoMembersIds)));

            if (initialCondoId) {
                loadOccurrences(initialCondoId, initialSelectedOccurrences);
                loadCondoMembers(initialCondoId, initialSelectedMembers);
            }

            // Ativar a função também no evento de mudança, para permitir a troca de condomínio
            $('#condominiumSelect').change(function () {
                var condoId = $(this).val();
                loadOccurrences(condoId, []); 
                loadCondoMembers(condoId, []); 
            });
        });
    </script>

}