@model CondoManagementWebApp.Models.CondoMemberDashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container mt-4 text-dark">

    <!-- Member profile -->
    <div class="d-flex align-items-center mb-4">
        <img src="@Model.CondoMemberDto?.ImageFullPath"
             alt="Member photo"
             class="rounded-circle me-3 border"
             style="width: 80px; height: 80px; object-fit: cover;" />
        <div>
            <h2 class="mb-0 text-dark">@Model.CondoMemberDto?.FullName</h2>
            <small class="text-secondary">@Model.CondoMemberDto?.Email</small>
        </div>
    </div>

    <div class="accordion" id="dashboardAccordion">

        <!-- Units -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingUnits">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseUnits" aria-expanded="true" aria-controls="collapseUnits">
                    My Units
                </button>
            </h2>
            <div id="collapseUnits" class="accordion-collapse collapse show" aria-labelledby="headingUnits" data-bs-parent="#dashboardAccordion">
                <div class="accordion-body p-0">
                    <div class="card bg-white border border-light shadow-sm rounded text-dark">
                        <div class="card-body">
                            @if (Model.UnitDtos != null && Model.UnitDtos.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var unit in Model.UnitDtos)
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-center text-dark">
                                            <div>
                                                <strong>Condominium:</strong> @unit.CondominiumDto?.CondoName <br />
                                                <strong>Unit:</strong> Door @unit.Door, Floor @unit.Floor
                                            </div>
                                            <span class="badge bg-primary">Bedrooms: @unit.Bedrooms</span>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-secondary">No units found.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Messages -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingMessages">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMessages" aria-expanded="false" aria-controls="collapseMessages">
                    Recent Messages
                </button>
            </h2>
            <div id="collapseMessages" class="accordion-collapse collapse" aria-labelledby="headingMessages" data-bs-parent="#dashboardAccordion">
                <div class="accordion-body p-0">
                    <div class="card bg-white border border-light shadow-sm rounded text-dark">
                        <div class="card-body">
                            @if (Model.MessageDtos != null && Model.MessageDtos.Any())
                            {
                                <div class="list-group">
                                    @foreach (var msg in Model.MessageDtos
                                                                    .OrderByDescending(m => m.PostingDate)
                                                                    .Take(5))
                                    {
                                        <a href="#" class="list-group-item list-group-item-action text-dark">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h6 class="mb-1 text-dark">@msg.MessageTitle</h6>
                                                <small class="text-secondary">@msg.PostingDate?.ToString("MM/dd/yyyy")</small>
                                            </div>
                                            <p class="mb-1">@msg.MessageContent</p>
                                            <small class="text-muted">
                                                <strong>From:</strong> @msg.SenderEmail
                                                <br />
                                                <strong>To:</strong> @msg.ReceiverEmail
                                            </small>
                                        </a>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-secondary">No messages received.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Meetings (next 5 upcoming ) -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingMeetings">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMeetings" aria-expanded="false" aria-controls="collapseMeetings">
                    Upcoming Meetings
                </button>
            </h2>
            <div id="collapseMeetings" class="accordion-collapse collapse" aria-labelledby="headingMeetings" data-bs-parent="#managerDashboardAccordion">
                <div class="accordion-body p-0">
                    @if (Model.MeetingsDtos != null && Model.MeetingsDtos.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var mt in Model.MeetingsDtos.OrderBy(m => m.DateAndTime).Take(5))
                            {
                                var condoName = Model.UnitDtos
                                .Select(u => u.CondominiumDto)
                                .FirstOrDefault(c => c != null && c.Id == mt.CondominiumId)
                                ?.CondoName;

                                <div class="list-group-item border-0 mb-3 shadow-sm rounded p-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="mb-0 text-primary">
                                            <i class="bi bi-calendar-event me-2"></i> @mt.Title
                                        </h5>
                                        <span class="badge bg-light text-dark">
                                            @mt.DateAndTime.ToString("dd/MM/yyyy HH:mm")
                                        </span>
                                    </div>

                                    <p class="mb-1 text-muted">
                                        <strong>Condominium:</strong> @condoName
                                    </p>

                                    @if (!string.IsNullOrEmpty(mt.Description))
                                    {
                                        <p class="mb-2"><em>@mt.Description</em></p>
                                    }

                                    @if (mt.CondoMembersDto != null && mt.CondoMembersDto.Any())
                                    {
                                        <div class="mb-2">
                                            <strong>Members:</strong>
                                            <ul class="small text-muted ps-3">
                                                @foreach (var member in mt.CondoMembersDto)
                                                {
                                                    <li>@member.FullName (@member.Email)</li>
                                                }
                                            </ul>
                                        </div>
                                    }

                                    @if (mt.OccurencesDto != null && mt.OccurencesDto.Any(o => !o.IsResolved))
                                    {
                                        <div class="mb-2">
                                            <strong>Occurrences:</strong>
                                            <ul class="small text-danger ps-3">
                                                @foreach (var occ in mt.OccurencesDto.Where(o => !o.IsResolved))
                                                {
                                                    <li>
                                                        <strong>@occ.Subject</strong> - @occ.DateAndTime.ToString("dd/MM/yyyy")<br />
                                                        @occ.Details
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(mt.MeetingLink))
                                    {
                                        var now = DateTime.Now;
                                        var start = mt.DateAndTime.AddHours(-3);
                                        var end = mt.DateAndTime.AddHours(3);

                                        if (now >= start && now <= end)
                                        {
                                            <a href="@mt.MeetingLink" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-link-45deg"></i> Join Meeting
                                            </a>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-secondary p-3">No upcoming meetings.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Financial Account -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingFinancial">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFinancial" aria-expanded="true" aria-controls="collapseFinancial">
                    Financial Account
                </button>
            </h2>
            <div id="collapseFinancial" class="accordion-collapse collapse" aria-labelledby="headingFinancial" data-bs-parent="#adminDashboardAccordion">
                <div class="accordion-body">
                    @if (Model.FinancialAccountDto != null)
                    {
                        <p><strong>Owner:</strong> @Model.FinancialAccountDto.OwnerName</p>
                        <p><strong>Bank:</strong> @Model.FinancialAccountDto.BankName</p>
                        <p><strong>Account Number:</strong> @Model.FinancialAccountDto.AssociatedBankAccount</p>
                        <p><strong>Card Number:</strong> @Model.FinancialAccountDto.CardNumber</p>
                        <p><strong>Balance:</strong> @Model.FinancialAccountDto.Balance.ToString("C")</p>
                        <p><strong>Status:</strong> @(Model.FinancialAccountDto.IsActive ? "Active" : "Inactive")</p>
                    }
                    else
                    {
                        <p class="text-secondary">No financial account linked.</p>
                    }
                </div>
            </div>
        </div>





        <!-- Pending Payments (next 5 unpaid) -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingPayments">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePayments" aria-expanded="false" aria-controls="collapsePayments">
                    Pending Payments
                </button>
            </h2>
            <div id="collapsePayments" class="accordion-collapse collapse" aria-labelledby="headingPayments" data-bs-parent="#managerDashboardAccordion">
                <div class="accordion-body p-0">
                    <div class="card bg-white border border-light shadow-sm rounded text-dark">
                        <div class="card-body">
                            @if (Model.PaymentsDtos != null && Model.PaymentsDtos.Any(p => !p.IsPaid))
                            {
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Due Date</th>
                                            <th>Amount</th>
                                            <th>Recipient</th>
                                            <th>Payer</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var p in Model.PaymentsDtos.Where(p => !p.IsPaid).OrderBy(p => p.DueDate).Take(5))
                                        {
                                            <tr>
                                                <td>@p.DueDate.ToString("MM/dd/yyyy")</td>
                                                <td class="text-success">@p.Amount?.ToString("C")</td>
                                                <td>@p.Recipient</td>
                                                <td>@p.Payer</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <p class="text-secondary">No pending payments registered.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Occurrences (last 5 unresolved) -->
        <div class="accordion-item mb-2 rounded shadow-sm">
            <h2 class="accordion-header" id="headingOccurrences">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOccurrences" aria-expanded="false" aria-controls="collapseOccurrences">
                    My Occurrences (Unresolved)
                </button>
            </h2>
            <div id="collapseOccurrences" class="accordion-collapse collapse" aria-labelledby="headingOccurrences" data-bs-parent="#dashboardAccordion">
                <div class="accordion-body p-0">
                    <div class="card bg-white border border-light shadow-sm rounded text-dark">
                        <div class="card-body">
                            @if (Model.OccurrenceDtos != null && Model.OccurrenceDtos.Any())
                            {
                                <div class="list-group">
                                    @foreach (var occ in Model.OccurrenceDtos)
                                    {
                                        <div class="list-group-item">
                                            <h6 class="mb-1 text-danger">
                                                <i class="bi bi-exclamation-triangle me-1"></i> @occ.Subject
                                            </h6>
                                            <p class="mb-1">@occ.Details</p>
                                            <small class="text-secondary">Date: @occ.DateAndTime.ToString("dd/MM/yyyy HH:mm")</small>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-secondary">No unresolved occurrences.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
