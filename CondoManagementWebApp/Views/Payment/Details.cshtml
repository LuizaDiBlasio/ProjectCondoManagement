@model ClassLibrary.DtoModels.PaymentDto

@{
    ViewData["Title"] = "Payment Details";
}

<div class="content-body">
    <div class="container-fluid">
        <div class="row page-titles mx-0">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h4>Payment Details</h4>
                </div>
            </div>
            <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
                    <li class="breadcrumb-item active"><a href="javascript:void(0)">Payment Details</a></li>
                </ol>
            </div>
        </div>

        <div class="row">
            <div class="col-xl-12 col-xxl-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Payment Info</h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label font-weight-bold">@Html.DisplayNameFor(model => model.IssueDate)</label>
                                <p>@Html.DisplayFor(model => model.IssueDate)</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label font-weight-bold">@Html.DisplayNameFor(model => model.DueDate)</label>
                                <p>@Html.DisplayFor(model => model.DueDate)</p>
                            </div>
                            @if (Model.PaymentMethod != null)
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label font-weight-bold">@Html.DisplayNameFor(model => model.PaymentMethod)</label>
                                    <p>@Html.DisplayFor(model => model.PaymentMethod)</p>
                                </div>
                            }
                            <div class="col-md-6 mb-3">
                                <label class="form-label font-weight-bold">Status</label>
                                @if (Model.IsPaid)
                                {
                                    <p>Paid</p>
                                }
                                else
                                {
                                    <p>Not paid</p>
                                }
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label font-weight-bold">@Html.DisplayNameFor(model => model.TotalAmount)</label>
                                <p>@Html.DisplayFor(model => model.TotalAmount)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-12 col-xxl-12 mt-4">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Associated Expenses</h4>
                    </div>
                    <div class="card-body">
                        @if (!Model.ExpensesDto.Any())
                        {
                            <p>No expenses associated with this payment.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Expense Type</th>
                                            <th>Details</th>
                                            <th>Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ExpensesDto)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(modelItem => item.ExpenseTypeDto.Name)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Detail)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-start mt-3">
            @Html.ActionLink("Pay", "MakePayment", new { id = Model.Id }, new { @class = "btn btn-primary me-2" })
            @if (User.IsInRole("CondoManager"))
            {
                @Html.ActionLink("Cancel", "Delete", new { id = Model.Id }, new { @class = "btn btn-outline-danger" })
            }
            <a asp-action="IndexPayments" class="btn btn-outline-secondary ms-2">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}